---
interface Props {
  /**
   * Heading level (h1-h6)
   */
  level?: 1 | 2 | 3 | 4 | 5 | 6;
  
  /**
   * Size variant independent of heading level
   */
  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl';
  
  /**
   * Glow effect variant
   */
  glow?: 'none' | 'subtle' | 'medium' | 'intense';
  
  /**
   * Animation variant
   */
  animation?: 'none' | 'fade-in' | 'slide-up' | 'type-effect' | 'glow-pulse';
  
  /**
   * Gradient variant for text
   */
  gradient?: 'primary' | 'secondary' | 'rainbow' | 'none';
  
  /**
   * Text alignment
   */
  align?: 'left' | 'center' | 'right';
  
  /**
   * Animation delay in milliseconds
   */
  delay?: number;
  
  /**
   * Additional CSS classes
   */
  class?: string;
}

const {
  level = 1,
  size = 'xl',
  glow = 'medium',
  animation = 'fade-in',
  gradient = 'none',
  align = 'center',
  delay = 0,
  class: className = ''
} = Astro.props as Props;

// Size classes
const sizeClasses = {
  sm: 'text-lg md:text-xl',
  md: 'text-xl md:text-2xl',
  lg: 'text-2xl md:text-3xl',
  xl: 'text-3xl md:text-4xl',
  '2xl': 'text-4xl md:text-5xl',
  '3xl': 'text-5xl md:text-6xl',
  '4xl': 'text-6xl md:text-7xl',
  '5xl': 'text-7xl md:text-8xl',
  '6xl': 'text-8xl md:text-9xl'
};

// Glow classes
const glowClasses = {
  none: '',
  subtle: 'drop-shadow-glow-subtle',
  medium: 'drop-shadow-glow-medium',
  intense: 'drop-shadow-glow-intense'
};

// Animation classes
const animationClasses = {
  none: '',
  'fade-in': 'animate-fade-in',
  'slide-up': 'animate-slide-up',
  'type-effect': 'animate-type-effect',
  'glow-pulse': 'animate-glow-pulse'
};

// Gradient classes
const gradientClasses = {
  primary: 'bg-gradient-to-r from-brand-pink to-brand-purple bg-clip-text text-transparent',
  secondary: 'bg-gradient-to-r from-brand-purple to-brand-cyan bg-clip-text text-transparent',
  rainbow: 'bg-gradient-to-r from-brand-pink via-brand-cyan to-brand-purple bg-clip-text text-transparent',
  none: 'text-text-light'
};

// Alignment classes
const alignClasses = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right'
};

const headingClasses = [
  'font-black tracking-tighter',
  'transition-all duration-500',
  sizeClasses[size],
  glowClasses[glow],
  animationClasses[animation],
  gradientClasses[gradient],
  alignClasses[align],
  className
].filter(Boolean).join(' ');

const Element = `h${level}` as keyof HTMLElementTagNameMap;
---

<Element 
  class={headingClasses}
  style={delay > 0 ? `animation-delay: ${delay}ms` : undefined}
>
  <slot />
</Element>

<style>
  /* Glow effects */
  .drop-shadow-glow-subtle {
    filter: drop-shadow(0 0 4px rgba(255, 45, 146, 0.3));
  }

  .drop-shadow-glow-medium {
    filter: drop-shadow(0 0 8px rgba(255, 45, 146, 0.4)) drop-shadow(0 0 16px rgba(139, 92, 246, 0.2));
  }

  .drop-shadow-glow-intense {
    filter: drop-shadow(0 0 12px rgba(255, 45, 146, 0.6)) 
            drop-shadow(0 0 24px rgba(139, 92, 246, 0.4)) 
            drop-shadow(0 0 36px rgba(6, 182, 212, 0.2));
  }

  /* Advanced animations */
  @keyframes type-effect {
    0% {
      width: 0;
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      width: 100%;
      opacity: 1;
    }
  }

  @keyframes glow-pulse {
    0%, 100% {
      filter: drop-shadow(0 0 8px rgba(255, 45, 146, 0.4)) drop-shadow(0 0 16px rgba(139, 92, 246, 0.2));
      transform: scale(1);
    }
    50% {
      filter: drop-shadow(0 0 16px rgba(255, 45, 146, 0.6)) drop-shadow(0 0 32px rgba(139, 92, 246, 0.4));
      transform: scale(1.02);
    }
  }

  .animate-type-effect {
    overflow: hidden;
    white-space: nowrap;
    animation: type-effect 2s ease-out forwards;
  }

  .animate-glow-pulse {
    animation: glow-pulse 3s ease-in-out infinite;
  }
</style>
