---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'section'> {
  /**
   * Unique identifier for the section
   */
  id?: string;

  /**
   * Background pattern variant for Fluent Design
   */
  backgroundVariant?:
    | 'hero-gradient'
    | 'solid-dark'
    | 'solid-darker'
    | 'glass'
    | 'abstract'
    | 'geometric'
    | 'transparent';

  /**
   * Animation variant for section entrance
   */
  animation?: 'fade-in' | 'slide-up' | 'scale-in' | 'none';

  /**
   * Padding variant for responsive spacing
   */
  padding?: 'sm' | 'md' | 'lg' | 'xl' | 'none';

  /**
   * Content alignment
   */
  align?: 'left' | 'center' | 'right';
}

const {
  id,
  backgroundVariant = 'transparent',
  animation = 'fade-in',
  padding = 'lg',
  align = 'center',
  class: className = '',
  ...props
} = Astro.props as Props;

// Animation classes
const animationClasses = {
  'fade-in': 'animate-fade-in',
  'slide-up': 'animate-slide-up',
  'scale-in': 'animate-scale-in',
  none: '',
};

// Padding classes
const paddingClasses = {
  none: '',
  sm: 'py-12 md:py-16',
  md: 'py-16 md:py-24',
  lg: 'py-20 md:py-32',
  xl: 'py-28 md:py-40',
};

// Alignment classes
const alignClasses = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right',
};

const sectionClasses = [
  'relative w-full min-h-0',
  animationClasses[animation],
  paddingClasses[padding],
  alignClasses[align],
  className,
]
  .filter(Boolean)
  .join(' ');
---

<section {id} class={sectionClasses} data-padding={padding} {...props}>
  {
    backgroundVariant === 'hero-gradient' && (
      <div aria-hidden="true" class="absolute inset-0 -z-10">
        <div class="absolute inset-0 bg-gradient-to-br from-brand-darker via-brand-dark to-brand-darker opacity-95" />
      </div>
    )
  }
  {
    backgroundVariant === 'solid-dark' && (
      <div aria-hidden="true" class="absolute inset-0 -z-10">
        <div class="absolute inset-0 bg-brand-dark" />
      </div>
    )
  }
  {
    backgroundVariant === 'solid-darker' && (
      <div aria-hidden="true" class="absolute inset-0 -z-10">
        <div class="absolute inset-0 bg-brand-darker" />
      </div>
    )
  }
  {
    backgroundVariant === 'glass' && (
      <div aria-hidden="true" class="absolute inset-0 -z-10">
        <div class="absolute inset-0 bg-brand-card/20" />
      </div>
    )
  }
  {
    backgroundVariant === 'abstract' && (
      <div aria-hidden="true" class="absolute inset-0 -z-10">
        <div class="absolute inset-0 bg-gradient-to-tr from-brand-purple/3 via-transparent to-brand-pink/3" />
      </div>
    )
  }
  {
    backgroundVariant === 'geometric' && (
      <div aria-hidden="true" class="absolute inset-0 -z-10">
        <div class="absolute inset-0 bg-gradient-radial from-brand-cyan/3 via-brand-purple/2 to-transparent" />
      </div>
    )
  }
  <div class="relative w-full mx-auto">
    <slot />
  </div>
</section>

<style>
  /* Additional animation keyframes for new animations */
  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(48px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scale-in {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-slide-up {
    animation: slide-up 0.8s cubic-bezier(0.4, 0, 0.2, 1) both;
  }

  .animate-scale-in {
    animation: scale-in 0.6s cubic-bezier(0.4, 0, 0.2, 1) both;
  }

  /* Gradient radial utility */
  .bg-gradient-radial {
    background-image: radial-gradient(circle, var(--tw-gradient-stops));
  }
</style>
